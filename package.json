from flask import Flask, request, jsonify
import subprocess
import time
import psutil
import sys
import io

app = Flask(__name__)

@app.route('/run', methods=['POST'])
def run_code():
    data = request.get_json()
    code = data['code']
    try:
        # Capture output
        old_stdout = sys.stdout
        redirected_output = sys.stdout = io.StringIO()
        exec(code)
        sys.stdout = old_stdout
        return jsonify({'output': redirected_output.getvalue()})
    except Exception as e:
        return jsonify({'error': str(e)})

@app.route('/debug', methods=['POST'])
def debug_code():
    data = request.get_json()
    code = data['code']
    # Simplified debugging (placeholder)
    return jsonify({
        'breakpoints': 'Line 1, Line 3',
        'variables': 'x=5, y=10'
    })

@app.route('/profile', methods=['POST'])
def profile_code():
    data = request.get_json()
    code = data['code']
    start_time = time.time()
    process = psutil.Process()
    start_memory = process.memory_info().rss
    try:
        exec(code)
        end_time = time.time()
        end_memory = process.memory_info().rss
        return jsonify({
            'execTime': f'{(end_time - start_time):.4f} seconds',
            'memUsage': f'{(end_memory - start_memory) / 1024:.2f} KB'
        })
    except Exception as e:
        return jsonify({'error': str(e)})

if __name__ == '__main__':
    app.run(debug=True)
